library(medflex)
library(VGAM)
library(car)

### multicategorical exposure
head(UPBdata)
#UPBdata$attcat <- factor(UPBdata$attcat, ordered = F)
#UPBdata$educ <- factor(UPBdata$educ, ordered = F)
UPBdata$attcat <- relevel(UPBdata$attcat, ref = "L")
contrasts(UPBdata$attcat)

## imputation (extends easily)
# stratum-specific
expData <- neImpute(UPB ~ attcat * negaff + gender + educ + age, family = binomial, data = UPBdata)
expData$attcat0 <- relevel(expData$attcat0, ref = "L")
expData$attcat1 <- relevel(expData$attcat1, ref = "L")
contrasts(expData$attcat0)
contrasts(expData$attcat1)

neMod <- neModel(UPB ~ attcat0 * attcat1 + gender + educ + age, family = binomial, expData = expData, se = "robust")
summary(neMod)
Anova(neMod, type = "III")

# population-average (some adaptations were needed!)
fitX <- vglm(attcat ~ gender + educ + age, family = multinomial(), data = UPBdata)

# debug(medflex:::neModelEst)
neMod <- neModel(UPB ~ attcat0 * attcat1, family = binomial, expData = expData, xFit = fitX, nBoot = 50)
summary(neMod)
Anova(neMod, type = "III")

## weighting
## imputation (extends easily)
# stratum-specific
expData <- neWeight(negaff ~ attcat + gender + educ + age, data = UPBdata)
expData$attcat0 <- relevel(expData$attcat0, ref = "L")
expData$attcat1 <- relevel(expData$attcat1, ref = "L")

neMod <- neModel(UPB ~ attcat0 * attcat1 + gender + educ + age, family = binomial, expData = expData, se = "robust")
summary(neMod)
Anova(neMod, type = "III")

# population-average
fitX <- vglm(attcat ~ gender + educ + age, family = multinomial(), data = UPBdata)

# debug(neModel)
neMod <- neModel(UPB ~ attcat0 * attcat1, family = binomial, expData = expData, xFit = fitX, nBoot = 50)
summary(neMod)
Anova(neMod, type = "III")



### binary mediator
UPBdata$negaffbin <- cut(UPBdata$negaff, 2, labels = c("low", "high"))

## weighting
expData <- neWeight(negaffbin ~ att + gender + educ + age, family = binomial, data = UPBdata)
attr(expData, "weights")
expData2 <- neWeight(factor(negaffbin) ~ att + gender + educ + age, family = binomial, data = UPBdata)
attr(expData2, "weights")
expData3 <- neWeight(negaffbin ~ att + gender + educ + age, family = binomialff, data = UPBdata, FUN = vglm)
attr(expData3, "weights")
neMod <- neModel(UPB ~ att0 * att1 + gender + educ + age, family = binomial, expData = expData, se = "robust")
summary(neMod)


### multicategorical mediator
UPBdata$negaffcat <- cut(UPBdata$negaff, 3, labels = c("low", "moderate", "high"))

## imputation (no real difference whether mediator continuous or categorical)
expData <- neImpute(UPB ~ att * negaffcat + gender + educ + age, family = binomial, data = UPBdata)
neMod <- neModel(UPB ~ att0 * att1 + gender + educ + age, family = binomial, expData = expData, se = "robust")
summary(neMod)

# population-average
#fitX <- vglm(att ~ gender + educ + age, family = gaussianff, data = UPBdata)
fitX <- vglm(att ~ gender + educ + age, family = uninormal, data = UPBdata)

# debug(medflex:::neModelEst)
neMod <- neModel(UPB ~ att0 * att1, family = binomial, expData = expData, xFit = fitX, nBoot = 50)
summary(neMod)

## weighting
# no more issues! (?)
# debug(medflex:::neWeight.default)
expData <- neWeight(negaffcat ~ att + gender + educ + age, family = multinomial, data = UPBdata, FUN = vglm)
attr(expData, "weights")
neMod <- neModel(UPB ~ att0 * att1 + gender + educ + age, family = binomial, expData = expData, nBoot = 50)
summary(neMod)

# population-average
#fitX <- vglm(att ~ gender + educ + age, family = gaussianff, data = UPBdata)
fitX <- vglm(att ~ gender + educ + age, family = uninormal, data = UPBdata)

# debug(medflex:::neModelEst)
neMod <- neModel(UPB ~ att0 * att1, family = binomial, expData = expData, xFit = fitX, nBoot = 50)
summary(neMod)
