Changes in Version 0.6-8

  o Issue with neWeight function using VGAM::vglm with family = multinomial solved (cf github issue #15)
  o neWeight function and xFit argument in neModel function now compatible with family = uninormal specification (VGAM::vglm function) ("gaussianff" was deprecated)

Changes in Version 0.6-7

  o neEffdecomp no longer fails when covariate name is substring of outcome name (cf github issue #13)

Changes in Version 0.6-6

  o Scoping issue solved (cf github issue #14)

Changes in Version 0.6-5

  o neWeight function is now compatible with SuperLearner with family = binomial

Changes in Version 0.6-4

  o First byte-compiled version
  o Correction of example in neImpute help files with binary exposure (should be explicitly coded as factor!)
  o Issue with bootstrap and data.frame named 'data' solved (github issue #8)
  o Issue with family specification for propensity score model solved (github issue #11)
  o Issue with special terms of formula of vgam function solved (github issue #12)

Changes in Version 0.6-3

  o Added compatibility with magrittr's forward-pipe operator `%>%` 
  o Issue with scoping solved (cf github issue #6)

Changes in Version 0.6-2

  o Error when running neEffdecomp on a neModel-object that represents a population-average natural effect model: fixed (cf github issue #7)

Changes in Version 0.6-1

  o Added flexibility with formula argument (in order to mimick glm function's behavior) (cf github issue #2)
  o Compatibility with tbl_df function from dplyr package (cf github pull request #3)
  o Bug fixed when using vglm function from VGAM package in (i) neImpute: returned imputed outcomes on scale of link function instead of mean outcome scale (use of predictvglm instead of predict.vglm in order for type = "response" to be properly specified), (ii) neWeight and (iii) neModelEst (when specifying xFit): either returned incorrect weights or error (same reason as for neImpute) (cf github issue #4)

Changes in Version 0.6-0

  o Compatibility with mice and mitools packages for multiple imputation (see vignette for documentation and example)
  o Sandwich estimator now also accommodates settings with missingness only in the outcome (requires MAR assumption for imputation-based approach on all cases and MCAR assumption for weighting-based approach on complete cases): no more error returned
  o Goodness-of-fit tools added: convenience functions residualPlot and residualPlots from the car package can now also be used on expData-class and neModel-class objects to assess model adequacy of the working model(s) and natural effect models, respectively.
  o Error when name of the mediator variable is a substring of the name of the exposure variable ("The original mediator variables should not be included in the natural effect model!"): fixed
  o Warning about model uncongeniality when name of the exposure variable is a substring of the name of the mediator variable (cf mail correspondence with CY 08/07/2015): bug fixed
 
 
Changes in Version 0.5-1

  o Error/bug when using factor() terms in neEffdecomp: fixed
  o neWeight now returns a warning when trying to specify more than one mediator (e.g. 'nMed = 2'), as joint mediated effects are only implemented for the imputation-based approach.
  o Coding error for outcome variable 'UPB' in UPBdata dataset: fixed (up to version 0.5-0 'UPB' was a binary variable indicating whether the individual reported having displayed at least 4 events of unwanted pursuit behavior; while it stated to indicate whether the individual reported having displayed any unwanted pursuit behavior(s) towards the ex-partner)
  

Changes in Version 0.5-0

  o Robust standard errors based on the sandwich estimator as alternative for bootstrap SEs (option 'se = "robust"' in neModel function)
  o Advanced options for effect decomposition (neEffdecomp function now allows to specify reference exposure levels and covariate levels via 'xRef' and 'covLev' arguments, respectively)
  o Additional option to weight for multicategorical variables (either via inverse-probability-of-treatment weighting for multivariate exposures or via ratio-of-mediator-probability weighting for multivariate mediators) using 'vglm' from the 'VGAM' package as model fitting function
  o Vignettes with more details added
  o Ratio-of-mediator-probability weights can be extracted from the expanded dataset object via 'weights' function
  o Minor changes to UPBdata (different versions of variables + variable 'initiator' added)
  o Bugs in neEffdecomp fixed: error returned if imputation model did not contain covariates, 'ci.type' argument can now be specified
  o Bug in Anova() applied to neModel object fixed